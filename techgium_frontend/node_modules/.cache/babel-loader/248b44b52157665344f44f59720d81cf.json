{"ast":null,"code":"var _jsxFileName = \"/home/ayush/techgium/techgium_frontend/src/component/Inititalizer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useState } from \"react\";\nimport navicon from '../images/bx_bxs-navigation.png';\nimport crane from '../images/crane.png';\nimport collision_warning from \"../images/hexagon-xmark-solid.svg\";\nimport jerk_warning from \"../images/jerk-detect.svg\";\nimport parse from 'html-react-parser';\nimport axios from 'axios'; // import navigation as img from ../\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Initializer(_ref) {\n  _s();\n\n  let {\n    socket,\n    createNewSocket,\n    deleteSocket\n  } = _ref;\n  const [length, setLength] = useState(\"\");\n  const [breadth, setBreadth] = useState(\"\");\n  const [frame, setFrame] = useState({});\n  const [gstyle, setGstyle] = useState({});\n  const [lgstyle, setLGstyle] = useState({});\n  const [arrowStyle, setArrowStyle] = useState({});\n  const [source, setSource] = useState(\"\");\n\n  const messageListener = message => {\n    const key_val = {\n      data: JSON.parse(message.data)\n    }; // key_val[\"data\"] = {...key_val[\"data\"],\n\n    key_val[\"data\"] = {\n      \"quad\": 4,\n      \"building_height\": 1,\n      \"active_height\": 2,\n      \"speed\": 100,\n      \"speed_x\": 0,\n      \"speed_y\": 0,\n      \"speed_z\": 0,\n      \"distance\": 10,\n      \"iteration\": 100,\n      \"longitude\": 0,\n      \"latitude\": 0,\n      \"acceleration_x\": 0,\n      \"acceleration_y\": 0,\n      \"acceleration_z\": 0,\n      \"jerk_warning\": 5,\n      \"collision_warning\": 2,\n      \"nodes\": 9,\n      \"jerk_x\": 0,\n      \"jerk_y\": 0,\n      \"jerk_z\": 0\n    };\n    console.log(key_val[\"data\"]);\n    setFrame(key_val[\"data\"]);\n  };\n\n  const streamListner = stream => {\n    // update image src here\n    console.log(stream);\n    let x = `data:image/jpeg;base64,${stream}`;\n    console.log(x);\n    setSource(x);\n  };\n\n  useEffect(() => {\n    if (socket != null) {\n      socket.on(\"data\", messageListener);\n      socket.on(\"stream\", streamListner);\n    }\n  }, [socket]);\n  useEffect(() => {\n    setGstyle({\n      height: `${frame.building_height / 6 * 480}px`\n    });\n    setLGstyle({\n      height: `${frame.active_height / 6 * 480}px`\n    });\n    setArrowStyle({\n      transform: `rotate(${frame.quad * 45 - 45}deg)`\n    });\n  }, [frame]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    createNewSocket(Number(length), Number(breadth));\n  };\n\n  const stop = event => {\n    event.preventDefault();\n    socket.emit(\"stop\", \"stopping\");\n    socket.close();\n    deleteSocket();\n  }; //  \n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-list\",\n    children: socket == null ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"parameters-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: crane,\n        alt: \"crane\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter Length\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: length,\n          onChange: e => setLength(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Enter breadth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: breadth,\n          onChange: e => setBreadth(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: source\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Initializer, \"tvW0/EMCdNAHID7+xL+sJkeK2e0=\");\n\n_c = Initializer;\nexport default Initializer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Initializer\");","map":{"version":3,"sources":["/home/ayush/techgium/techgium_frontend/src/component/Inititalizer.jsx"],"names":["React","Component","useEffect","useState","navicon","crane","collision_warning","jerk_warning","parse","axios","Initializer","socket","createNewSocket","deleteSocket","length","setLength","breadth","setBreadth","frame","setFrame","gstyle","setGstyle","lgstyle","setLGstyle","arrowStyle","setArrowStyle","source","setSource","messageListener","message","key_val","data","JSON","console","log","streamListner","stream","x","on","height","building_height","active_height","transform","quad","handleSubmit","event","preventDefault","Number","stop","emit","close","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from \"react\";\r\nimport navicon from '../images/bx_bxs-navigation.png';\r\nimport crane from '../images/crane.png';\r\nimport collision_warning from \"../images/hexagon-xmark-solid.svg\";\r\nimport jerk_warning from \"../images/jerk-detect.svg\";\r\nimport parse from 'html-react-parser'\r\nimport axios from 'axios';\r\n// import navigation as img from ../\r\n\r\nfunction Initializer({ socket, createNewSocket, deleteSocket }) {\r\n  const [length, setLength] = useState(\"\");\r\n  const [breadth, setBreadth] = useState(\"\");\r\n  const [frame, setFrame] = useState({});\r\n  const [gstyle, setGstyle] = useState({});\r\n  const [lgstyle, setLGstyle] = useState({});\r\n  const [arrowStyle, setArrowStyle] = useState({});\r\n  const [source, setSource] = useState(\"\");\r\n\r\n  const messageListener = (message) => {\r\n    const key_val = { data: JSON.parse(message.data) };\r\n    // key_val[\"data\"] = {...key_val[\"data\"],\r\n    key_val[\"data\"] = {\r\n\r\n      \"quad\": 4,\r\n      \"building_height\": 1,\r\n      \"active_height\": 2,\r\n      \"speed\": 100,\r\n      \"speed_x\": 0,\r\n      \"speed_y\": 0,\r\n      \"speed_z\": 0,\r\n      \"distance\": 10,\r\n      \"iteration\": 100,\r\n      \"longitude\": 0,\r\n      \"latitude\": 0,\r\n      \"acceleration_x\": 0,\r\n      \"acceleration_y\": 0,\r\n      \"acceleration_z\": 0,\r\n      \"jerk_warning\": 5,\r\n      \"collision_warning\": 2,\r\n      \"nodes\": 9,\r\n      \"jerk_x\": 0,\r\n      \"jerk_y\": 0,\r\n      \"jerk_z\": 0\r\n    }\r\n    console.log(key_val[\"data\"]);\r\n    setFrame(key_val[\"data\"]);\r\n  };\r\n\r\n  const streamListner = (stream) => {\r\n    // update image src here\r\n    console.log(stream);\r\n    let x = `data:image/jpeg;base64,${stream}`;\r\n    console.log(x);\r\n    setSource(x);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (socket != null) {\r\n      socket.on(\"data\", messageListener);\r\n      socket.on(\"stream\", streamListner);\r\n    }\r\n  }, [socket])\r\n\r\n  useEffect(() => {\r\n    setGstyle({\r\n      height: `${(frame.building_height / 6) * 480}px`,\r\n    });\r\n    setLGstyle({\r\n      height: `${(frame.active_height / 6) * 480}px`,\r\n    });\r\n    setArrowStyle({\r\n      transform: `rotate(${frame.quad * 45 - 45}deg)`\r\n    })\r\n  }, [frame]);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    createNewSocket(Number(length), Number(breadth));\r\n  };\r\n\r\n  const stop = (event) => {\r\n    event.preventDefault();\r\n    socket.emit(\"stop\", \"stopping\");\r\n    socket.close();\r\n    deleteSocket();\r\n  };\r\n\r\n  //  \r\n\r\n  return (\r\n    <div className=\"message-list\">\r\n      {socket == null ? (\r\n        <form onSubmit={handleSubmit} className=\"parameters-form\">\r\n          <img src={crane} alt=\"crane\" />\r\n          <div>\r\n            <label>Enter Length</label>\r\n            <input\r\n              type=\"text\"\r\n              value={length}\r\n              onChange={(e) => setLength(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <label>Enter breadth</label>\r\n            <input\r\n              type=\"text\"\r\n              value={breadth}\r\n              onChange={(e) => setBreadth(e.target.value)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" />\r\n        </form>\r\n      ) : (\r\n        <div>\r\n          {/* <main>\r\n            <div className=\"nav-bar\">\r\n              <div className=\"icons\">\r\n                <div>\r\n                  <i className=\"fa-solid fa-bolt-lightning\"></i>\r\n                </div>\r\n                <div>\r\n                  <i className=\"fa-solid fa-grip\"></i>\r\n                </div>\r\n                <div>\r\n                  <i className=\"fa-solid fa-triangle-exclamation\"></i>\r\n                </div>\r\n                <div>\r\n                  <i className=\"fa-solid fa-location-crosshairs\"></i>\r\n                </div>\r\n              </div>\r\n              <div className=\"battery\">\r\n                <div>\r\n                  <div className=\"cap\"></div>\r\n                </div>\r\n                <div>\r\n                  <div className=\"capacity\">\r\n                    <div className=\"full\"></div>\r\n                    <div className=\"percentage\"></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"main\">\r\n              <div className=\"app-main\">\r\n                <div className=\"parameters\">\r\n                  <div className=\"para-name\">\r\n                    <div>Speed</div>\r\n                    <div>Distance</div>\r\n                    <div>Iteration</div>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"para-values\">\r\n                    <div>\r\n                      <div>{frame.speed && frame.speed.toFixed(2)} </div>\r\n                      <div className=\"para-unit\">cm/s</div>\r\n                    </div>\r\n                    <div>\r\n                      {frame.distance && frame.distance.toFixed(2)}{\" \"}\r\n                      <div className=\"para-unit\">M</div>\r\n                    </div>\r\n                    <div>\r\n                      {frame.iteration} <div className=\"para-unit\">cycles</div>\r\n                    </div>\r\n                  </div>\r\n                  <hr />\r\n                </div>\r\n                <div className=\"crane-comp\">\r\n                  <div>\r\n                    <ul className=\"crane-circle\">{parse(quadGen())}</ul>\r\n                  </div>\r\n                  <div className=\"crane-square\"></div>\r\n                </div>\r\n                <div className=\"arrow-circle\">\r\n                  <div className=\"crane-comp crane-direction\">\r\n                    <div>\r\n                      <ul className=\"crane-circle\">{parse(ArrowGen())}</ul>\r\n                    </div>\r\n                    <div className=\"crane-square crane-arrow\">\r\n                      <img src={navicon} alt=\"navicon\" style={arrowStyle} />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"collision-detect\">\r\n                    <img src={collision_warning} alt=\"jerk\" style={collision()} />\r\n                  </div>\r\n                  <div className=\"jerk-detect\">\r\n                    <img src={jerk_warning} alt=\"jerk\" style={detection()} />\r\n                  </div>\r\n                  <div className=\"go-text\" onClick={stop}>\r\n                    STOP\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"app-sidebar\">\r\n                <div className=\"height-loader\">\r\n                  <div className=\"grey-bar\"></div>\r\n                  <div className=\"green-bar\" style={gstyle}>\r\n                    <div>\r\n                      {frame.building_height &&\r\n                        frame.building_height.toFixed(2)}\r\n                      m\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"light-green-bar\" style={lgstyle}>\r\n                    <div>\r\n                      {frame.active_height && frame.active_height.toFixed(2)}m\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n          <section>\r\n            <div className=\"side-panel\">\r\n              <h1>Log Sheet</h1>\r\n              <ul>\r\n                <li>\r\n                  Longitude: <span className=\"log-values\">23.165</span>\r\n                </li>\r\n                <li>\r\n                  Latitude: <span className=\"log-values\">79.932</span>\r\n                </li>\r\n                <li>\r\n                  Speed\r\n                  <ul>\r\n                    <li>\r\n                      x:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.speed_x && frame.speed_x.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      y:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.speed_y && frame.speed_y.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      z:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.speed_z && frame.speed_z.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li>\r\n                  Acceleration\r\n                  <ul>\r\n                    <li>\r\n                      x:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.acceleration_x &&\r\n                          frame.acceleration_x.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      y:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.acceleration_y &&\r\n                          frame.acceleration_y.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      z:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.acceleration_z &&\r\n                          frame.acceleration_z.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li>\r\n                  Jerk\r\n                  <ul>\r\n                    <li>\r\n                      x:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.jerk_x && frame.jerk_x.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      y:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.jerk_y && frame.jerk_y.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                    <li>\r\n                      z:{\" \"}\r\n                      <span className=\"log-values\">\r\n                        {frame.jerk_z && frame.jerk_z.toFixed(2)}\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </li>\r\n                <li>\r\n                  Iterations:{\" \"}\r\n                  <span className=\"log-values\">{frame.iteration}</span>\r\n                </li>\r\n                <li>\r\n                  N(Jerk warnings):{\" \"}\r\n                  <span className=\"log-values\">{frame.jerk_warning}</span>\r\n                </li>\r\n                <li>\r\n                  N(Collision warnings):\r\n                  <span className=\"log-values\">{frame.collision_warning}</span>\r\n                </li>\r\n                <li>\r\n                  Nodes Active:\r\n                  <span className=\"log-values\">{frame.nodes}</span>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </section> */}\r\n          <img src={source}></img>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Initializer;\r\n"]},"metadata":{},"sourceType":"module"}